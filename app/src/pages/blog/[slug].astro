---
import Base from "../../layouts/Base.astro";
import { getCollection } from "astro:content";
import readingTime from "reading-time";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
    return posts.map((post) => {
    const stats = readingTime(post.body);
    return {
      params: { slug: post.slug },
      props: {
        post,
        readingTime: Math.ceil(stats.minutes),
      },
    };
  });
}

const { post, readingTime } = Astro.props;
// Renderiza el contenido MD/MDX:
const { Content } = await post.render();
---

<Base title={`${post.data.title} — Héctor Medina`} description={post.data.description}>
  <article class="prose mx-auto max-w-prose md:max-w-3xl px-4 md:px-0 dark:prose-invert">
    <header class="mb-8 not-prose">
      <p class="text-sm text-muted">
        {post.data.pubDate.toLocaleDateString()}
        {post.data.category && <> • {post.data.category}</>}
        <span>• {readingTime} min de lectura</span>
      </p>
      <h1 class="!mb-3">{post.data.title}</h1>

      {post.data.description && (
        <p class="text-lg sm:text-xl text-[rgb(var(--text))]/90 font-normal leading-relaxed mt-1 mb-2">
          {post.data.description}
        </p>
      )}
      
      {post.data.tags && (
        <div class="mt-3 flex flex-wrap gap-2">
          {post.data.tags.map((tag) => (
            <span
  class="text-slate-700 dark:text-slate-100
         bg-slate-100 dark:bg-slate-800
         border border-slate-300 dark:border-slate-700
         text-xs px-2 py-1 rounded-full
         transition-colors"
>#{tag}</span>
          ))}
        </div>
      )}
    </header>

    <Content />
  </article>
</Base>
